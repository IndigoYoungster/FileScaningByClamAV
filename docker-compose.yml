version: '3.4'

services:
  clamd:
    image: clamav/clamav:0.104.1
    restart: unless-stopped
    networks:
      - clam-net
  api:
    image: benzino77/clamav-rest-api
    restart: unless-stopped
    depends_on:
      - clamd
    environment:
      - NODE_ENV=production
      - CLAMD_IP=clamd
      - APP_FORM_KEY=FILES
      - APP_PORT=3000
    ports:
      - '8080:3000'
    networks:
      - clam-net

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181

  kafka1:
    image: confluentinc/cp-kafka:latest
    restart: unless-stopped
    hostname: kafka1
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./data/kafka2/data:/var/lib/kafka/data
    depends_on:
      - zookeeper

  clamavscaning:
    image: ${DOCKER_REGISTRY-}clamavscaning
    build:
      context: ./clamavScaning
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - clam-net

  fileschecker:
    image: ${DOCKER_REGISTRY-}fileschecker
    build:
      context: ./filesChecker
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    networks:
      - clam-net
networks:
  clam-net:
